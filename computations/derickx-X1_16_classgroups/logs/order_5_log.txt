Magma V2.26-10    Thu Jul  4 2024 12:57:55 on Maartens-MacBook-Pro [Seed = 3892842406]

+-------------------------------------------------------------------+
|       This copy of Magma has been made available through a        |
|                   generous initiative of the                      |
|                                                                   |
|                         Simons Foundation                         |
|                                                                   |
| covering U.S. Colleges, Universities, Nonprofit Research entities,|
|               and their students, faculty, and staff              |
+-------------------------------------------------------------------+

Type ? for help.  Type <Ctrl>-D to quit.
> load "elliptic_curve_chabauty.m";
Loading "elliptic_curve_chabauty.m"
>
> _<x>:=PolynomialRing(Integers());
> f := x*(x^2+1)*(x^2+2*x-1);
> // a model of X_1(16)
> C := HyperellipticCurve(f);
>
> FF<x,y> := FunctionField(C);
> p1,p2 := Explode(Zeros(x-1)); p1,p2;
Place at (1 : 2 : 1)
Place at (1 : -2 : 1)
> tf, h := IsPrincipal(5*(p1-p2));
>
> // h is 0 mod 2 and 3 so we need to divide by 6
>
> print h/6;
(-6*x^2 - 4*x + 2)/(x^5 - 5*x^4 + 10*x^3 - 10*x^2 + 5*x - 1)*y + (x^5 + 13*x^4 - 2*x^3 + 10*x^2 - 7*x + 1)/(x^5 - 5*x^4 + 10*x^3 - 10*x^2 + 5*x - 1)
> //prints
> // (-6*x^2 - 4*x + 2)/(x^5 - 5*x^4 + 10*x^3 - 10*x^2 + 5*x - 1)*y + (x^5 + 13*x^4 -
> //    2*x^3 + 10*x^2 - 7*x + 1)/(x^5 - 5*x^4 + 10*x^3 - 10*x^2 + 5*x - 1)
> // exceptions give quadratic points on the degree 5 cover X -> X_1(16) given by z^5 = (h/6);
> // note that t(x,y,z) = (x,-y,z^(-1)) is an automorphism of X, and a quadratic point on
> // X with x in Q gives a rational point on X/<t>
>
>
> //first compute the curve whose rational points we need to find
>
> A3<x,y,z>:=AffineSpace(Rationals(),3);
>
> C := Curve(A3,[y^2-(x*(x^2+1)*(x^2+2*x-1)), z^5*(x^5 - 5*x^4 + 10*x^3 - 10*x^2 + 5*x - 1)-((-6*x^2 - 4*x + 2)*y + x^5 + 13*x^4 - 2*x^3 + 10*x^2 - 7*x + 1)]);
>
> C1 := ProjectiveClosure(C);
> G := AutomorphismGroup(C1);
> auts := [g : g in Automorphisms(C1) | Order(G ! g) eq 2];
> assert #auts eq 1;
>
> // t = auts[1]
> // C2 = X/<t>, we need to find the points on this curve
> C2 := CurveQuotient(AutomorphismGroup(C1, [G ! auts[1]]));
>
> print C2;
Hyperelliptic Curve defined by y^2 = x^6 - x^5 + 5*x^3 - x + 1 over Rational
Field
> //  prints:
> //      Hyperelliptic Curve defined by y^2 = x^6 - x^5 + 5*x^3 - x + 1 over \
Rational Field
>
> //  now for the determination of the points
>
> _<x> :=PolynomialRing(Integers());
> f := x^6 - x^5 + 5*x^3 - x + 1;
> // Uncomment the following line if you want to skip computing C2.
> C2 := HyperellipticCurve(f);
> L1 :=  NumberField(x^3 - x^2 + 2*x + 2);
> g := [pe[1] : pe in Factorization(ChangeRing(f,L1)) |  Degree(pe[1]) eq 4][1\
];
>
>
> time Hk , AtoHk, expvecs, factorbase := TwoCoverDescent(C2: Raw:=true);
Time: 0.590
>
> // Get the map that allows us to construct covers explicitly as elements in \
an algebra A
> HktoA := createHktoA(AtoHk, expvecs, factorbase);
>
> Hk := Setseq(Hk);
> points := {@ @};
> hk_info := [* *];
> for i in [1..#Hk] do
for>   hk := Hk[i];
for>   print "doing hk", i, hk;
for>   assert AtoHk(HktoA(hk)) eq hk;
for>
for>   success, gamma_g, new_points, message := EllipticChabauty(C2, g, hk, Hk\
toA);
for>   print "chabauty result", success, gamma_g, new_points, message;
for>
for>   if success then
for|if>     points := points join new_points;
for|if>     continue;
for|if>   end if;
for>
for>   Append(~hk_info,<gamma_g,message>);
for>   if not success then
for|if>     print "=============================== failed ====================\
==";
for|if>     print hk, i, #Hk;
for|if>     print hk_info;
for|if>     break;
for|if>   end if;
for> end for;
doing hk 1 0
gamma 1
finding points
Time: 10.160
Elliptic curve Elliptic Curve defined by y^2 + 6*x*y + (4*K.1^2 + 12)*y = x^3 +
(K.1^2 - 3)*x^2 + (-9*K.1^2 - 2*K.1 - 29)*x + (-20*K.1^2 + 16*K.1 - 28) over K
Time: 3.180
starting chabauty
13120 8
chabauty result true <1, $.1^4 + (-L1.1^2 + L1.1 - 2)*$.1^3 + (L1.1^2 - 3*L1.1 +
    3)*$.1^2 + (-L1.1^2 + L1.1 - 2)*$.1 + 1>
{@ (1 : -1 : 0), (1 : 1 : 0), (0 : -1 : 1), (0 : 1 : 1) @}
found all points
doing hk 2 $.1
gamma 1
finding points
Time: 10.580
Elliptic curve Elliptic Curve defined by y^2 + 6*x*y + (4*K.1^2 + 12)*y = x^3 +
(K.1^2 - 3)*x^2 + (-9*K.1^2 - 2*K.1 - 29)*x + (-20*K.1^2 + 16*K.1 - 28) over K
Time: 2.690
starting chabauty
13120 8
chabauty result true <1, $.1^4 + (-L1.1^2 + L1.1 - 2)*$.1^3 + (L1.1^2 - 3*L1.1 +
    3)*$.1^2 + (-L1.1^2 + L1.1 - 2)*$.1 + 1>
{@ (1 : -1 : 0), (1 : 1 : 0), (0 : -1 : 1), (0 : 1 : 1) @}
found all points
doing hk 3 $.1 + $.2 + $.3
gamma K.1^2 + 2
finding points
Time: 9.550
Elliptic curve Elliptic Curve defined by y^2 + 6*x*y + (6*K.1^2 + 10)*y = x^3 +
(K.1^2 + K.1 - 2)*x^2 + (-180*K.1^2 + 278*K.1 - 530)*x + (-859*K.1^2 + 1428*K.1
    - 2593) over K
Time: 2.450
starting chabauty
4 8
chabauty result true <L1.1^2 + 2, $.1^4 + (-L1.1^2 + L1.1 - 2)*$.1^3 + (L1.1^2 -
    3*L1.1 + 3)*$.1^2 + (-L1.1^2 + L1.1 - 2)*$.1 + 1>
{@ (-1/3 : -29/27 : 1), (-1/3 : 29/27 : 1), (-3 : -29 : 1), (-3 : 29 : 1) @}
found all points
>
> print "====================== found points: ====================";
====================== found points: ====================
> print points;
{@ (1 : -1 : 0), (1 : 1 : 0), (0 : -1 : 1), (0 : 1 : 1), (-1/3 : -29/27 : 1),
(-1/3 : 29/27 : 1), (-3 : -29 : 1), (-3 : 29 : 1) @}
>
>

Total time: 336.550 [470.881] seconds, Total memory usage: 248.78MB
